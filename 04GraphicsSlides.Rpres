Graphics in R
========================================================
author: 
date: 
autosize: true


base High-Level Plotting
========================================================
Here are some examples of the high-level plotting in base R:
```{r echo=T, eval=F}
## Histograms
hist(rnorm(100, 50, 5) )

## Bar Charts
barplot( table( sample( c("Red","Green","Blue"), 25, replace=TRUE)))

## Box Plots
boxplot( with(iris, split(Petal.Length, Species)), ylab='Petal Length' )

## Scatter Plots
plot( runif(100), rnorm(100), pch=19, col='blue' )
```

base High-Level Plotting - Histogram
========================================================
```{r echo=T}
hist(rnorm(100, 50, 5) )
```

base High-Level Plotting - Bar Charts
========================================================
Here are some examples of the high-level plotting in base R:
```{r echo=T}
barplot( table( sample( c("Red","Green","Blue"), 25, replace=TRUE)))
```

base High-Level Plotting - Box Plot
========================================================
Here are some examples of the high-level plotting in base R:
```{r echo=T}
boxplot( with(iris, split(Petal.Length, Species)), ylab='Petal Length' )
```

base High-Level Plotting - Scatter Plot
========================================================
Here are some examples of the high-level plotting in base R:
```{r echo=T}
plot( runif(100), rnorm(100), pch=19, col='blue' )
```



base Low-Level Plotting
========================================================
Here is an example of the low-level plotting functions in base R:
```{r echo=T, eval=F}
plot(1:10, 1:10)
abline( 0, 1, col='red' )
abline( 10, -2, col='blue' )
abline( h=5, col='green' )
abline( v=c(2,5,8), col='purple' )
points( 10:1, 1:10, pch=1:10,
 col=rep( c('blue','red'), each=5) )
lines( 1:10, ( (1:10) - 5 )^2/5, col='orange' )
```

base Low-Level Plotting (cont.)
========================================================
```{r echo=F, eval=T}
plot(1:10, 1:10)
abline( 0, 1, col='red' )
abline( 10, -2, col='blue' )
abline( h=5, col='green' )
abline( v=c(2,5,8), col='purple' )
points( 10:1, 1:10, pch=1:10,
 col=rep( c('blue','red'), each=5) )
lines( 1:10, ( (1:10) - 5 )^2/5, col='orange' )
```


ggplot2
========================================================
Slides - <http://lpv-phdev01:3838/ggplot-slides>


Interactive plotting in R
========================================================
`plotly` is my favorite package for interactive plotting in R:

```{r echo=T, eval=F}
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, color = ~carat,
        size = ~carat, text = ~paste("Clarity: ", clarity),
        type = "scatter")
```

**Note:** See <https://plot.ly/r/> for documentation and example code.


Interactive plotting in R (cont.)
========================================================
`plotly` also can be used to add interactivity to `ggplot2` graphs:

```{r echo=T, eval=F}
library(plotly)

set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]

p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity)), size = .5) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)

p <- ggplotly(p)
```
Other packages like `htmlwidgets`, `shiny`, `rCharts` are also very useful.


Hands-on Activity 
========================================================
See `04Graphics.R` code.

Hands-on Activity Questions
========================================================
1. What functions/packages did you use to plot your data?
2. Did you encounter any errors?
3. How do you manually define your x-axis or y-axis range?
4. Is it possible to make the overlayed distributions slightly transparent?
5. Other observations?
